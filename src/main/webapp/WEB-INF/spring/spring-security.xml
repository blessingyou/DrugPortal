<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/security 
		http://www.springframework.org/schema/security/spring-security.xsd
		http://www.springframework.org/schema/util 
		http://www.springframework.org/schema/util/spring-util.xsd">

	<http pattern="/resources/**" security="none" />
	<http pattern="/assets/**" security="none" />
	
	<http auto-config="false" use-expressions="true" entry-point-ref="loginUrlAuthenticationEntryPoint">
		<intercept-url pattern="/login" access="permitAll" />
		<intercept-url pattern="/login/failure" access="permitAll" />
		<intercept-url pattern="/logout" access="permitAll" />
		<intercept-url pattern="/mobile/**" access="permitAll" />				
		
		<!-- testing -->
		<intercept-url pattern="/**" access="permitAll" />
		
		<!--  production 
		<intercept-url pattern="/**" access="isAuthenticated()" />
		-->
		<access-denied-handler error-page="/denied" />
		<logout invalidate-session="true" logout-success-url="/logout/success" logout-url="/logout" />
		
		<custom-filter ref="authenticationFilter" position="FORM_LOGIN_FILTER"/>

		<custom-filter ref="crosFilter" before="HEADERS_FILTER"/>		
 		 
 		 <session-management  session-authentication-strategy-ref="sas"/>
	</http>

	<beans:bean id="loginUrlAuthenticationEntryPoint" class="org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint">
		<beans:property name="loginFormUrl" value="/login" />
	</beans:bean>

	<beans:bean id="authenticationFilter" class="com.versionsystem.common.CustomUsernamePasswordAuthenticationFilter">
		<beans:property name="sessionAuthenticationStrategy" ref="sas" />
		<beans:property name="authenticationManager" ref="authenticationManager" />
		<beans:property name="filterProcessesUrl" value="/filterUrl" />
		<beans:property name="authenticationFailureHandler" ref="securityLoginFailureHandler" />
		<beans:property name="authenticationSuccessHandler" ref="securityLoginSuccessHandler" />
	</beans:bean>

	<beans:bean id="securityLoginSuccessHandler" class="com.versionsystem.service.security.SecurityLoginSuccessHandler">
		<beans:property name="defaultTargetUrl" value="/login" />
	</beans:bean>

	<beans:bean id="securityLoginFailureHandler" class="com.versionsystem.service.security.SecurityLoginFailureHandler" >
		<beans:property name="defaultFailureUrl" value="/login/failure" />
	</beans:bean>
	
	<beans:bean id="crosFilter" class="com.versionsystem.common.CrosFilter" />
	<beans:bean id="concurrencyFilter" class="org.springframework.security.web.session.ConcurrentSessionFilter">
  		<beans:property name="sessionRegistry" ref="sessionRegistry" />
  		<beans:property name="expiredUrl" value="/login" />
	</beans:bean>
	
	<beans:bean id="sas" class="org.springframework.security.web.authentication.session.ConcurrentSessionControlStrategy">
  		<beans:constructor-arg name="sessionRegistry" ref="sessionRegistry" />
  		<beans:property name="maximumSessions" value="1" />
	</beans:bean>
	<beans:bean id="sessionRegistry"
    class="org.springframework.security.core.session.SessionRegistryImpl" />

	<authentication-manager alias="authenticationManager">
		<authentication-provider user-service-ref="customUserDetailsService">
			<password-encoder hash="md5" />
		</authentication-provider>
	</authentication-manager>
</beans:beans>