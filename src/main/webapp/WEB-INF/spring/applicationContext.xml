<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p" 
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	   		http://www.springframework.org/schema/beans/spring-beans.xsd
	   		http://www.springframework.org/schema/context
	   		http://www.springframework.org/schema/context/spring-context.xsd
			http://www.springframework.org/schema/mvc 
			http://www.springframework.org/schema/mvc/spring-mvc.xsd">
			
	<context:property-placeholder properties-ref="deployProperties" />

	<!-- Activates various annotations to be detected in bean classes -->
	<context:annotation-config />

	<!-- Scans the classpath for annotated components that will be auto-registered as Spring beans.
	 For example @Controller and @Service. Make sure to set the correct base-package -->
	<context:component-scan base-package="com.versionsystem" />

	<!-- Configures the annotation-driven Spring MVC Controller programming model.
	Note that, with Spring 3.0, this tag works in Servlet MVC only!  -->
	<mvc:annotation-driven>
		<!--  <mvc:path-matching registered-suffixes-only="true"/>-->
		
		<mvc:message-converters>
            
            <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
                <property name="objectMapper">
                    <bean class="com.versionsystem.common.KendoAwareObjectMapper" />
                </property>
                <property name="prettyPrint" value="true"/>
            </bean>
            
        </mvc:message-converters>
         
	</mvc:annotation-driven>  
	
	
	
	<mvc:resources mapping="/resources/**" location="/resources/" />
	<mvc:resources mapping="/app/**" location="/WEB-INF/securityResources/app/" />
	<mvc:resources mapping="/bower_components/**" location="/WEB-INF/securityResources/bower_components/" />
	<mvc:resources mapping="/assets/**" location="/WEB-INF/securityResources/assets/" />
	<mvc:resources mapping="/components/**" location="/WEB-INF/securityResources/components/" />
	
	<bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
    <property name="mediaTypes">
      <map>
        <entry key="json" value="application/json" />
      </map>
    </property>
  </bean> 
  <bean id="urlFilenameController"
        class="org.springframework.web.servlet.mvc.UrlFilenameViewController" />
	<bean id="jspViewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver" 
    		p:prefix="/WEB-INF/jsp/" p:suffix=".jsp" p:order="1">
    	
    </bean>
	 
 	  <!-- <bean id="deployProperties" class="org.springframework.beans.factory.config.PropertiesFactoryBean"
        p:location="file:src/main/webapp/WEB-INF/spring/spring.properties" /> 
      --> 
      <bean id="deployProperties" class="org.springframework.beans.factory.config.PropertiesFactoryBean"
        p:location="/WEB-INF/spring/spring.properties" /> 
       
        
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!-- one of the properties available; the maximum file size in bytes -->
        <property name="maxUploadSize" value="1000000"/>
    </bean>
 	<!-- Imports logging configuration -->
	<import resource="trace-context.xml"/>
	
	<!-- Imports datasource configuration -->
	<import resource="spring-data.xml"/>
	
	
	
	<mvc:interceptors>
        <bean id="localeChangeInterceptor" class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor">
            <property name="paramName" value="lang"/>
        </bean>
    </mvc:interceptors>
    <bean id="localeResolver" class="org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver"/>
    <bean id="messageSource"
        class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
        <property name="basename" value="classpath:messages" />
        <property name="defaultEncoding" value="UTF-8" />
    </bean>
    <!-- Unfortunately we have to repeat an instance of this class here because the mvc:message-converters element above
         does not support <ref/> elements: -->
    <bean id="jacksonHttpMessageConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
        <property name="prettyPrint" value="true"/>
        <property name="objectMapper">
              <bean class="com.versionsystem.common.KendoAwareObjectMapper" />
        </property>
    </bean>
    
    <!-- Allow Exceptions to be handled in annotated methods if desired.  Otherwise fallback to the
         'restExceptionResolver' below: -->
    <bean id="annotationMethodHandlerExceptionResolver"
          class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerExceptionResolver">
        <property name="order" value="0"/>
    </bean>
    <bean id="restExceptionResolver" class="com.stormpath.spring.web.servlet.handler.RestExceptionHandler">
        <property name="order" value="100"/>
        <property name="messageConverters">
            <list>
                <ref bean="jacksonHttpMessageConverter"/>
            </list>
        </property>
        <property name="errorResolver">
            <bean class="com.stormpath.spring.web.servlet.handler.DefaultRestErrorResolver">
                <property name="localeResolver" ref="localeResolver"/>
                <property name="defaultMoreInfoUrl" value="mailto:support@mycompany.com"/>
                <property name="exceptionMappingDefinitions">
                    <map>
                        <!-- 404 -->
                        <entry key="com.versionsystem.common.ApplicationException" value="404, _exmsg"/>						
                        <!-- 500 (catch all): -->
                        <entry key="Throwable" value="500"/>
                    </map>
                </property>
            </bean>
        </property>
    </bean>
	
	
	
    
        
</beans>
